<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="1220" height="640" version="1.1" xmlns="http://www.w3.org/2000/svg">
<defs>
<linearGradient id="grad" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF3D00;stop-opacity:1"/>
<stop offset="50%" style="stop-color:#FF5252;stop-opacity:1"/>
<stop offset="100%" style="stop-color:#FF8A80;stop-opacity:1"/>
</linearGradient>
<linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF300;stop-opacity:0.8"/>
<stop offset="100%" style="stop-color:#FF500;stop-opacity:0.9"/>
</linearGradient>
<linearGradient id="grad2" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF600;stop-opacity:0.8"/>
<stop offset="100%" style="stop-color:#FF1000;stop-opacity:0.9"/>
</linearGradient>
<linearGradient id="grad3" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF900;stop-opacity:0.8"/>
<stop offset="100%" style="stop-color:#FF1500;stop-opacity:0.9"/>
</linearGradient>
<linearGradient id="grad4" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF1200;stop-opacity:0.8"/>
<stop offset="100%" style="stop-color:#FF2000;stop-opacity:0.9"/>
</linearGradient>
<linearGradient id="grad5" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF1500;stop-opacity:0.8"/>
<stop offset="100%" style="stop-color:#FF2500;stop-opacity:0.9"/>
</linearGradient>
<linearGradient id="grad6" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF1800;stop-opacity:0.8"/>
<stop offset="100%" style="stop-color:#FF3000;stop-opacity:0.9"/>
</linearGradient>
<linearGradient id="grad7" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF2100;stop-opacity:0.8"/>
<stop offset="100%" style="stop-color:#FF3500;stop-opacity:0.9"/>
</linearGradient>
<linearGradient id="grad8" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF2400;stop-opacity:0.8"/>
<stop offset="100%" style="stop-color:#FF4000;stop-opacity:0.9"/>
</linearGradient>
<linearGradient id="grad9" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF2700;stop-opacity:0.8"/>
<stop offset="100%" style="stop-color:#FF4500;stop-opacity:0.9"/>
</linearGradient>
<linearGradient id="grad10" x1="0%" y1="0%" x2="100%" y2="0%">
<stop offset="0%" style="stop-color:#FF3000;stop-opacity:0.8"/>
<stop offset="100%" style="stop-color:#FF5000;stop-opacity:0.9"/>
</linearGradient>
</defs>
<style>
.title { font-size: 18px; font-weight: bold; font-family: Arial; }
.subtitle { font-size: 12px; font-family: Arial; fill: #666; }
.frame { transition: opacity 0.3s; cursor: pointer; }
.frame:hover { opacity: 0.8; }
.frame-text { font-size: 10px; font-family: Arial; pointer-events: none; font-weight: 500; text-shadow: 0px 0px 3px rgba(0,0,0,0.7); fill: white; }
.frame-time { font-size: 8px; font-family: Arial; fill: #FFF; text-shadow: 0px 0px 2px rgba(0,0,0,0.8); }
</style>
<text x="10" y="24" class="title">CPU Profile Flame Graph</text>
<text x="10" y="42" class="subtitle">总采样数: 94490 | 函数数: 279 | 总CPU时间: 944.90 s | 采样率: 100.0 Hz</text>
<text x="10" y="58" class="subtitle">最大堆栈深度: 17 | 不同堆栈数: 271</text>
<text x="10" y="74" class="subtitle">热点函数: runtime.main (933.23 s, 98.8%) | math.Pow (479.52 s, 50.7%) | math.pow (406.38 s, 43.0%) | math.Tan (288.00 s, 30.5%) | math.tan (279.99 s, 29.6%)</text>
<g class="frame">
<rect x="10.0" y="610.0" width="1185.1793840618056" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.main
采样数: 93323 (98.76%)
耗时: 933.23 s</title>
</rect>
<text x="13.0" y="626.0" class="frame-text">runtime.main</text>
<text x="13.0" y="637.0" class="frame-time">(933.23 s)</text>
</g>
<g class="frame">
<rect x="10.0" y="580.0" width="608.2294422690233" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Pow
采样数: 47893 (50.69%)
耗时: 478.93 s</title>
</rect>
<text x="13.0" y="596.0" class="frame-text">math.Pow</text>
<text x="13.0" y="607.0" class="frame-time">(478.93 s)</text>
</g>
<g class="frame">
<rect x="10.0" y="550.0" width="515.8641126045085" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.pow
采样数: 40620 (42.99%)
耗时: 406.20 s</title>
</rect>
<text x="13.0" y="566.0" class="frame-text">math.pow</text>
<text x="13.0" y="577.0" class="frame-time">(406.20 s)</text>
</g>
<g class="frame">
<rect x="525.8641126045085" y="550.0" width="34.47983913641655" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Ldexp
采样数: 2715 (2.87%)
耗时: 27.15 s</title>
</rect>
<text x="528.8641126045085" y="566.0" class="frame-text">math.Ldexp</text>
<text x="528.8641126045085" y="577.0" class="frame-time">(27.15 s)</text>
</g>
<g class="frame">
<rect x="525.8641126045085" y="520.0" width="14.947613504074507" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.ldexp
采样数: 1177 (1.25%)
耗时: 11.77 s</title>
</rect>
</g>
<g class="frame">
<rect x="540.811726108583" y="520.0" width="6.0704836490633935" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsInf
采样数: 478 (0.51%)
耗时: 4.78 s</title>
</rect>
</g>
<g class="frame">
<rect x="546.8822097576464" y="520.0" width="5.1688009313154835" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Float64frombits
采样数: 407 (0.43%)
耗时: 4.07 s</title>
</rect>
</g>
<g class="frame">
<rect x="552.0510106889618" y="520.0" width="3.4162345221716586" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.normalize
采样数: 269 (0.28%)
耗时: 2.69 s</title>
</rect>
</g>
<g class="frame">
<rect x="555.4672452111334" y="520.0" width="2.489152291247751" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsNaN
采样数: 196 (0.21%)
耗时: 1.96 s</title>
</rect>
</g>
<g class="frame">
<rect x="557.9563975023812" y="520.0" width="2.349454968779765" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Float64bits
采样数: 185 (0.20%)
耗时: 1.85 s</title>
</rect>
</g>
<g class="frame">
<rect x="560.343951740925" y="550.0" width="31.076304370832894" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Frexp
采样数: 2447 (2.59%)
耗时: 24.47 s</title>
</rect>
<text x="563.343951740925" y="566.0" class="frame-text">math.Frexp</text>
<text x="563.343951740925" y="577.0" class="frame-time">(24.47 s)</text>
</g>
<g class="frame">
<rect x="560.343951740925" y="520.0" width="10.578897237802943" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsInf
采样数: 833 (0.88%)
耗时: 8.33 s</title>
</rect>
</g>
<g class="frame">
<rect x="570.922848978728" y="520.0" width="6.19748121494338" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.normalize
采样数: 488 (0.52%)
耗时: 4.88 s</title>
</rect>
</g>
<g class="frame">
<rect x="577.1203301936714" y="520.0" width="5.346597523547466" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.frexp
采样数: 421 (0.45%)
耗时: 4.21 s</title>
</rect>
</g>
<g class="frame">
<rect x="582.4669277172188" y="520.0" width="4.965604825907504" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Float64frombits
采样数: 391 (0.41%)
耗时: 3.91 s</title>
</rect>
</g>
<g class="frame">
<rect x="587.4325325431263" y="520.0" width="3.7464281934596255" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsNaN
采样数: 295 (0.31%)
耗时: 2.95 s</title>
</rect>
</g>
<g class="frame">
<rect x="591.4202561117579" y="550.0" width="13.360143930574665" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsInf
采样数: 1052 (1.11%)
耗时: 10.52 s</title>
</rect>
</g>
<g class="frame">
<rect x="604.7804000423325" y="550.0" width="7.276960524923273" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Modf
采样数: 573 (0.61%)
耗时: 5.73 s</title>
</rect>
</g>
<g class="frame">
<rect x="604.7804000423325" y="520.0" width="3.6829294105196317" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.archModf
采样数: 290 (0.31%)
耗时: 2.90 s</title>
</rect>
</g>
<g class="frame">
<rect x="612.0573605672558" y="550.0" width="5.714890464599429" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsNaN
采样数: 450 (0.48%)
耗时: 4.50 s</title>
</rect>
</g>
<g class="frame">
<rect x="618.2294422690233" y="580.0" width="365.75298973436344" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Tan
采样数: 28800 (30.48%)
耗时: 288.00 s</title>
</rect>
<text x="621.2294422690233" y="596.0" class="frame-text">math.Tan</text>
<text x="621.2294422690233" y="607.0" class="frame-time">(288.00 s)</text>
</g>
<g class="frame">
<rect x="618.2294422690233" y="550.0" width="355.58048470737646" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.tan
采样数: 27999 (29.63%)
耗时: 279.99 s</title>
</rect>
<text x="621.2294422690233" y="566.0" class="frame-text">math.tan</text>
<text x="621.2294422690233" y="577.0" class="frame-time">(279.99 s)</text>
</g>
<g class="frame">
<rect x="618.2294422690233" y="520.0" width="1.6001693300878401" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.trigReduce
采样数: 126 (0.13%)
耗时: 1.26 s</title>
</rect>
</g>
<g class="frame">
<rect x="619.8296115991111" y="520.0" width="0.10159805270398985" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Float64frombits
采样数: 8 (0.01%)
耗时: 0.08 s</title>
</rect>
</g>
<g class="frame">
<rect x="619.931209651815" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Float64bits
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="619.943909408403" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.asyncPreempt
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="973.8099269763998" y="550.0" width="6.60387342575934" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsInf
采样数: 520 (0.55%)
耗时: 5.20 s</title>
</rect>
</g>
<g class="frame">
<rect x="980.4138004021592" y="550.0" width="3.5686316012276436" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsNaN
采样数: 281 (0.30%)
耗时: 2.81 s</title>
</rect>
</g>
<g class="frame">
<rect x="983.9824320033867" y="580.0" width="140.078315165626" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Log
采样数: 11030 (11.67%)
耗时: 110.30 s</title>
</rect>
<text x="986.9824320033867" y="596.0" class="frame-text">math.Log</text>
<text x="986.9824320033867" y="607.0" class="frame-time">(110.30 s)</text>
</g>
<g class="frame">
<rect x="983.9824320033867" y="550.0" width="101.53455392104985" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.log
采样数: 7995 (8.46%)
耗时: 79.95 s</title>
</rect>
<text x="986.9824320033867" y="566.0" class="frame-text">math.log</text>
<text x="986.9824320033867" y="577.0" class="frame-time">(79.95 s)</text>
</g>
<g class="frame">
<rect x="983.9824320033867" y="520.0" width="0.05079902635199492" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gopreempt_m
采样数: 4 (0.00%)
耗时: 0.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="983.9824320033867" y="490.0" width="0.05079902635199492" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goschedImpl
采样数: 4 (0.00%)
耗时: 0.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="983.9824320033867" y="460.0" width="0.02539951317599746" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.casgstatus
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="984.0078315165628" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.schedule
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="984.0078315165628" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.execute
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="984.0332310297388" y="520.0" width="0.02539951317599746" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.asyncPreempt
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1085.5169859244365" y="550.0" width="32.80347126680072" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Frexp
采样数: 2583 (2.73%)
耗时: 25.83 s</title>
</rect>
<text x="1088.5169859244365" y="566.0" class="frame-text">math.Frexp</text>
<text x="1088.5169859244365" y="577.0" class="frame-time">(25.83 s)</text>
</g>
<g class="frame">
<rect x="1085.5169859244365" y="520.0" width="11.70917557413483" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Float64frombits
采样数: 922 (0.98%)
耗时: 9.22 s</title>
</rect>
</g>
<g class="frame">
<rect x="1097.2261614985714" y="520.0" width="8.153243729495186" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsInf
采样数: 642 (0.68%)
耗时: 6.42 s</title>
</rect>
</g>
<g class="frame">
<rect x="1105.3794052280666" y="520.0" width="5.587892898719441" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsNaN
采样数: 440 (0.47%)
耗时: 4.40 s</title>
</rect>
</g>
<g class="frame">
<rect x="1110.967298126786" y="520.0" width="3.9877235686316013" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.normalize
采样数: 314 (0.33%)
耗时: 3.14 s</title>
</rect>
</g>
<g class="frame">
<rect x="1114.9550216954176" y="520.0" width="3.3654354958196637" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.frexp
采样数: 265 (0.28%)
耗时: 2.65 s</title>
</rect>
</g>
<g class="frame">
<rect x="1118.3204571912372" y="550.0" width="5.740289977775427" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsInf
采样数: 452 (0.48%)
耗时: 4.52 s</title>
</rect>
</g>
<g class="frame">
<rect x="1124.0607471690128" y="580.0" width="43.306169965075675" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>main.multiplyMatrices
采样数: 3410 (3.61%)
耗时: 34.10 s</title>
</rect>
<text x="1127.0607471690128" y="596.0" class="frame-text">main.multiplyMatrices</text>
<text x="1127.0607471690128" y="607.0" class="frame-time">(34.10 s)</text>
</g>
<g class="frame">
<rect x="1124.0607471690128" y="550.0" width="0.8127844216319188" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.asyncPreempt
采样数: 64 (0.07%)
耗时: 0.64 s</title>
</rect>
</g>
<g class="frame">
<rect x="1124.8735315906447" y="550.0" width="0.330193671287967" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.makeslice
采样数: 26 (0.03%)
耗时: 0.26 s</title>
</rect>
</g>
<g class="frame">
<rect x="1124.8735315906447" y="520.0" width="0.330193671287967" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mallocgc
采样数: 26 (0.03%)
耗时: 0.26 s</title>
</rect>
</g>
<g class="frame">
<rect x="1124.8735315906447" y="490.0" width="0.26669488834797334" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mallocgcSmallNoscan
采样数: 21 (0.02%)
耗时: 0.21 s</title>
</rect>
</g>
<g class="frame">
<rect x="1124.8735315906447" y="460.0" width="0.13969732246798605" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.memclrNoHeapPointers
采样数: 11 (0.01%)
耗时: 0.11 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0132289131127" y="460.0" width="0.07619853952799238" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcache).nextFree
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0132289131127" y="430.0" width="0.06349878293999366" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcache).refill
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0132289131127" y="400.0" width="0.02539951317599746" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcentral).cacheSpan
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0132289131127" y="370.0" width="0.02539951317599746" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcentral).grow
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0132289131127" y="340.0" width="0.02539951317599746" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).alloc
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0132289131127" y="310.0" width="0.02539951317599746" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.systemstack
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0132289131127" y="280.0" width="0.02539951317599746" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).alloc.func1
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0132289131127" y="250.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.releasem
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0259286697008" y="250.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).allocSpan
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0259286697008" y="220.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).initSpan
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0259286697008" y="190.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mspan).init
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0386284262886" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*gcControllerState).update
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0894274526406" y="460.0" width="0.03809926976399619" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcStart
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0894274526406" y="430.0" width="0.03809926976399619" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.systemstack
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0894274526406" y="400.0" width="0.03809926976399619" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcStart.func3
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0894274526406" y="370.0" width="0.03809926976399619" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.finishsweep_m
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.0894274526406" y="340.0" width="0.02539951317599746" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*spanSet).reset
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1148269658165" y="340.0" width="0.01269975658799873" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Pointer[go.shape.struct { runtime.lfnode
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1148269658165" y="310.0" width="0.01269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title> runtime.popped internal/runtime/atomic.Uint32
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1148269658165" y="280.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title> runtime.spans [512]runtime.atomicMSpanPointer }]).Load
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1275267224046" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nextSample
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1275267224046" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.fastexprand
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="490.0" width="0.06349878293999366" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.deductAssistCredit
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="460.0" width="0.06349878293999366" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcAssistAlloc
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="430.0" width="0.06349878293999366" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.systemstack
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="400.0" width="0.06349878293999366" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcAssistAlloc.func2
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="370.0" width="0.06349878293999366" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcAssistAlloc1
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="340.0" width="0.06349878293999366" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcDrainN
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="310.0" width="0.03809926976399619" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.markroot
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="280.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.markroot.func1
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="250.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.scanstack
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="220.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*unwinder).next
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="190.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.funcspdelta
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="160.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.pcvalue
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1402264789926" y="130.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.step
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1529262355807" y="280.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.markrootBlock
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1529262355807" y="250.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.scanblock
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1529262355807" y="220.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.spanOf
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1656259921688" y="280.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlockWithRank
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1656259921688" y="250.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlock2
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1125.1783257487566" y="310.0" width="0.02539951317599746" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.scanobject
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1167.3669171340885" y="580.0" width="27.240977881257276" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>main.main
采样数: 2145 (2.27%)
耗时: 21.45 s</title>
</rect>
<text x="1170.3669171340885" y="596.0" class="frame-text">main.main</text>
<text x="1170.3669171340885" y="607.0" class="frame-time">(21.45 s)</text>
</g>
<g class="frame">
<rect x="1167.3669171340885" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.selectnbrecv
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1167.3669171340885" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.chanrecv
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1167.3796168906765" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.asyncPreempt
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="580.0" width="0.5460895332839454" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>main.calculateMatrix
采样数: 43 (0.05%)
耗时: 0.43 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="550.0" width="0.2920944015239708" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.makeslice
采样数: 23 (0.02%)
耗时: 0.23 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="520.0" width="0.2920944015239708" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mallocgc
采样数: 23 (0.02%)
耗时: 0.23 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="490.0" width="0.24129537517197588" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mallocgcSmallNoscan
采样数: 19 (0.02%)
耗时: 0.19 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="460.0" width="0.11429780929198857" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcache).nextFree
采样数: 9 (0.01%)
耗时: 0.09 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="430.0" width="0.11429780929198857" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcache).refill
采样数: 9 (0.01%)
耗时: 0.09 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="400.0" width="0.10159805270398985" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcentral).cacheSpan
采样数: 8 (0.01%)
耗时: 0.08 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="370.0" width="0.03809926976399619" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.deductSweepCredit
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="340.0" width="0.03809926976399619" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.sweepone
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="310.0" width="0.02539951317599746" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).nextSpanForSweep
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6078950153458" y="280.0" width="0.02539951317599746" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*spanSet).pop
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6332945285217" y="310.0" width="0.01269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*sweepLocked).sweep
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6459942851097" y="370.0" width="0.03809926976399619" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcentral).grow
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6459942851097" y="340.0" width="0.03809926976399619" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).alloc
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6459942851097" y="310.0" width="0.03809926976399619" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.systemstack
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6459942851097" y="280.0" width="0.03809926976399619" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).alloc.func1
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6459942851097" y="250.0" width="0.03809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).allocSpan
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6459942851097" y="220.0" width="0.02539951317599746" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pageAlloc).allocToCache
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6459942851097" y="190.0" width="0.02539951317599746" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pageAlloc).update
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6459942851097" y="160.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pallocBits).summarize
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6713937982856" y="220.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).allocMSpanLocked
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.6840935548737" y="370.0" width="0.02539951317599746" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*spanSet).pop
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7094930680498" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcentral).uncacheSpan
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7094930680498" y="370.0" width="0.01269975658799873" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*UnsafePointer).StoreNoWB
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7221928246377" y="460.0" width="0.06349878293999366" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.memclrNoHeapPointers
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7856916075777" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nanotime
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7856916075777" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nanotime1
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7983913641658" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.profilealloc
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7983913641658" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mProf_Malloc
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7983913641658" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.callers
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7983913641658" y="370.0" width="0.01269975658799873" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.systemstack
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7983913641658" y="340.0" width="0.01269975658799873" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.callers.func1
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7983913641658" y="310.0" width="0.01269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.tracebackPCs
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7983913641658" y="280.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*unwinder).next
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.7983913641658" y="250.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*unwinder).resolveInternal
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.8491903905178" y="490.0" width="0.02539951317599746" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mallocgcSmallScanHeader
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.8491903905178" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcTrigger.test
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.8491903905178" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*gcControllerState).trigger
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.8491903905178" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*gcControllerState).heapGoalInternal
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.861890147106" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.memclrNoHeapPointers
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1194.8745899036937" y="490.0" width="0.02539951317599746" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nextFreeFast
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.1539845486298" y="580.0" width="0.02539951317599746" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Sqrt
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.1793840618056" y="610.0" width="6.832469044343317" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.bgsweep
采样数: 538 (0.57%)
耗时: 5.38 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.1793840618056" y="580.0" width="6.4006773203513605" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.sweepone
采样数: 504 (0.53%)
耗时: 5.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.1793840618056" y="550.0" width="3.060641337707694" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*sweepLocked).sweep
采样数: 241 (0.26%)
耗时: 2.41 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.1793840618056" y="520.0" width="0.3047941581119695" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*spanSet).push
采样数: 24 (0.03%)
耗时: 0.24 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.1793840618056" y="490.0" width="0.08889829611599112" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint64).Add
采样数: 7 (0.01%)
耗时: 0.07 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.2682823579216" y="490.0" width="0.07619853952799238" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*atomicHeadTailIndex).incTail
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.3444808974496" y="490.0" width="0.02539951317599746" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*spanSetBlockAlloc).alloc
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.4841782199176" y="520.0" width="0.21589586199597843" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*gcBitsArena).tryAlloc
采样数: 17 (0.02%)
耗时: 0.17 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.7000740819135" y="520.0" width="0.17779659223198224" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.newMarkBits
采样数: 14 (0.01%)
耗时: 0.14 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.8778706741455" y="520.0" width="0.03809926976399619" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*consistentHeapStats).acquire
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.9159699439094" y="520.0" width="0.03809926976399619" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*UnsafePointer).Load
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.9540692136734" y="520.0" width="0.03809926976399619" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mspan).refillAllocCache
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.9921684834374" y="520.0" width="0.03809926976399619" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlockWithRank
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1195.9921684834374" y="490.0" width="0.03809926976399619" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlock2
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1196.0302677532013" y="520.0" width="0.02539951317599746" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.freeSpecial
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1196.0302677532013" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mProf_Free
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1196.0302677532013" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*bucket).mp
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1196.0429675097894" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlockWithRank
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1196.0429675097894" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlock2
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1196.0556672663772" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.lockWithRank
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1196.0556672663772" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.lock2
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1196.0683670229653" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*consistentHeapStats).release
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1196.0810667795533" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint32).Add
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1196.0937665361414" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uintptr).Store
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.2400253995133" y="550.0" width="1.2572759022118745" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).freeSpan
采样数: 99 (0.10%)
耗时: 0.99 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.2400253995133" y="520.0" width="1.2572759022118745" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.systemstack
采样数: 99 (0.10%)
耗时: 0.99 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.2400253995133" y="490.0" width="1.2318763890358768" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func2
采样数: 97 (0.10%)
耗时: 0.97 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.2400253995133" y="460.0" width="1.0032807704518998" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).freeSpanLocked
采样数: 79 (0.08%)
耗时: 0.79 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.2400253995133" y="430.0" width="0.5968885596359403" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pageAlloc).free
采样数: 47 (0.05%)
耗时: 0.47 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.2400253995133" y="400.0" width="0.43179172399195687" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pageAlloc).update
采样数: 34 (0.04%)
耗时: 0.34 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.2400253995133" y="370.0" width="0.3428934278759657" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pallocBits).summarize
采样数: 27 (0.03%)
耗时: 0.27 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.5829188273892" y="370.0" width="0.01269975658799873" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mergeSummaries
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.5956185839773" y="370.0" width="0.01269975658799873" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.packPallocSum
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.6718171235052" y="400.0" width="0.11429780929198857" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*scavengeIndex).free
采样数: 9 (0.01%)
耗时: 0.09 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.6718171235052" y="370.0" width="0.02539951317599746" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*scavChunkData).free
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.786114932797" y="400.0" width="0.02539951317599746" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pageAlloc).chunkOf
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.811514445973" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint64).Load
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1198.8369139591493" y="430.0" width="0.1650968356439835" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*sysMemStat).add
采样数: 13 (0.01%)
耗时: 0.13 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.0020107947933" y="430.0" width="0.05079902635199492" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pageAlloc).chunkOf
采样数: 4 (0.00%)
耗时: 0.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.0528098211453" y="430.0" width="0.03809926976399619" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*consistentHeapStats).acquire
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.0909090909092" y="430.0" width="0.02539951317599746" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint32).Add
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.1163086040851" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.chunkIdx.l1
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.2433061699653" y="460.0" width="0.06349878293999366" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlockWithRank
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.2433061699653" y="430.0" width="0.06349878293999366" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlock2
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.2433061699653" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mLockProfile).recordUnlock
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.3068049529054" y="460.0" width="0.05079902635199492" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.pageIndexOf
采样数: 4 (0.00%)
耗时: 0.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.3576039792574" y="460.0" width="0.02539951317599746" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mspan).base
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.3830034924333" y="460.0" width="0.02539951317599746" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.lock
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.4084030056092" y="460.0" width="0.02539951317599746" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint8).Load
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.4973013017252" y="550.0" width="0.6222880728119378" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).nextSpanForSweep
采样数: 49 (0.05%)
耗时: 0.49 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.4973013017252" y="520.0" width="0.3555931844639645" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*spanSet).pop
采样数: 28 (0.03%)
耗时: 0.28 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.8528944861891" y="520.0" width="0.08889829611599112" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uintptr).Load
采样数: 7 (0.01%)
耗时: 0.07 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.9417927823051" y="520.0" width="0.03809926976399619" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint32).Add
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1199.979892052069" y="520.0" width="0.02539951317599746" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint64).CompareAndSwap
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1200.005291565245" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.add
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1200.119589374537" y="550.0" width="0.5079902635199492" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mspan).countAlloc
采样数: 40 (0.04%)
耗时: 0.40 s</title>
</rect>
</g>
<g class="frame">
<rect x="1200.6275796380571" y="550.0" width="0.13969732246798605" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*sweepLocker).tryAcquire
采样数: 11 (0.01%)
耗时: 0.11 s</title>
</rect>
</g>
<g class="frame">
<rect x="1200.7672769605251" y="550.0" width="0.07619853952799238" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.traceEnabled
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1200.843475500053" y="550.0" width="0.07619853952799238" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*activeSweep).end
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1200.919674039581" y="550.0" width="0.06349878293999366" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*gcBits).bytep
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1200.983172822521" y="550.0" width="0.05079902635199492" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*specialsIter).valid
采样数: 4 (0.00%)
耗时: 0.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.033971848873" y="550.0" width="0.03809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*sweepClass).update
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.072071118637" y="550.0" width="0.03809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcentral).fullUnswept
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.110170388401" y="550.0" width="0.03809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcentral).partialUnswept
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.148269658165" y="550.0" width="0.02539951317599746" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.divRoundUp
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.1736691713409" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint64).Add
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.186368927929" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.spanHasNoSpecials
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.199068684517" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.traceAcquire
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.211768441105" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.traceAllocFreeEnabled
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.580061382157" y="580.0" width="0.15239707905598476" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.freeSomeWbufs
采样数: 12 (0.01%)
耗时: 0.12 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.580061382157" y="550.0" width="0.10159805270398985" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.systemstack
采样数: 8 (0.01%)
耗时: 0.08 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.580061382157" y="520.0" width="0.10159805270398985" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.freeSomeWbufs.func1
采样数: 8 (0.01%)
耗时: 0.08 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.580061382157" y="490.0" width="0.08889829611599112" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).freeManual
采样数: 7 (0.01%)
耗时: 0.07 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.580061382157" y="460.0" width="0.06349878293999366" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).freeSpanLocked
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.580061382157" y="430.0" width="0.02539951317599746" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pageAlloc).free
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.580061382157" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pageAlloc).update
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.580061382157" y="370.0" width="0.01269975658799873" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pallocBits).summarize
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.605460895333" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pallocBits).free
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.605460895333" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*pageBits).clearRange
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.618160651921" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*consistentHeapStats).release
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.668959678273" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.lockWithRank
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.668959678273" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.lock2
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.7324584612131" y="580.0" width="0.06349878293999366" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goschedIfBusy
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.7324584612131" y="550.0" width="0.06349878293999366" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gopreempt_m
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.7324584612131" y="520.0" width="0.06349878293999366" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goschedImpl
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.7324584612131" y="490.0" width="0.06349878293999366" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.schedule
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.7324584612131" y="460.0" width="0.06349878293999366" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.execute
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.7324584612131" y="430.0" width="0.02539951317599746" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.casgstatus
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.7324584612131" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint64).Add
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.7451582178012" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timeHistogram).record
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.7959572441532" y="580.0" width="0.06349878293999366" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint32).CompareAndSwap
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1201.8594560270933" y="580.0" width="0.02539951317599746" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*activeSweep).begin
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="610.0" width="2.3367552121917665" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.morestack
采样数: 184 (0.19%)
耗时: 1.84 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="580.0" width="2.3367552121917665" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gopreempt_m
采样数: 184 (0.19%)
耗时: 1.84 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="550.0" width="2.3367552121917665" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goschedImpl
采样数: 184 (0.19%)
耗时: 1.84 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="520.0" width="2.209757646311779" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.schedule
采样数: 174 (0.18%)
耗时: 1.74 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="490.0" width="1.8287649486718172" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.findRunnable
采样数: 144 (0.15%)
耗时: 1.44 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="460.0" width="1.0540797968038946" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timers).check
采样数: 83 (0.09%)
耗时: 0.83 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="430.0" width="0.9270822309239074" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timers).run
采样数: 73 (0.08%)
耗时: 0.73 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="400.0" width="0.7746851518679225" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timer).unlockAndRun
采样数: 61 (0.06%)
耗时: 0.61 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="370.0" width="0.3047941581119695" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timer).updateHeap
采样数: 24 (0.03%)
耗时: 0.24 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="340.0" width="0.2793946449359721" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timers).deleteMin
采样数: 22 (0.02%)
耗时: 0.22 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.011853106149" y="310.0" width="0.15239707905598476" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timers).siftDown
采样数: 12 (0.01%)
耗时: 0.12 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.164250185205" y="310.0" width="0.01269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>gcWriteBarrier
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.291247751085" y="340.0" width="0.02539951317599746" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timers).updateMinWhenHeap
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.3166472642608" y="370.0" width="0.22859561858397714" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goready
采样数: 18 (0.02%)
耗时: 0.18 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.3166472642608" y="340.0" width="0.22859561858397714" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goroutineReady.goready.func1
采样数: 18 (0.02%)
耗时: 0.18 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.3166472642608" y="310.0" width="0.17779659223198224" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.ready
采样数: 14 (0.01%)
耗时: 0.14 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.3166472642608" y="280.0" width="0.06349878293999366" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.runqput
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.380146047201" y="280.0" width="0.03809926976399619" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.casgstatus
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.4182453169649" y="280.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.wakep
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.430945073553" y="280.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlockWithRank
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.430945073553" y="250.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlock2
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.4944438564928" y="310.0" width="0.02539951317599746" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.acquirem
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.5198433696687" y="310.0" width="0.01269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.releasem
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.5452428828448" y="370.0" width="0.07619853952799238" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goroutineReady
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.6214414223728" y="370.0" width="0.06349878293999366" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*scavengerState).init.func1
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.6214414223728" y="340.0" width="0.03809926976399619" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*scavengerState).wake
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.6214414223728" y="310.0" width="0.03809926976399619" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.injectglist
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.6214414223728" y="280.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.casgstatus
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.6341411789608" y="280.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.runqputbatch
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.786538258017" y="400.0" width="0.07619853952799238" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timer).updateHeap
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.8627367975448" y="400.0" width="0.02539951317599746" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlockWithRank
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.8627367975448" y="370.0" width="0.02539951317599746" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlock2
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.8627367975448" y="340.0" width="0.02539951317599746" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mLockProfile).recordUnlock
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.8881363107207" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Int32).Add
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.9389353370727" y="430.0" width="0.02539951317599746" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint8).Load
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1202.9643348502486" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timers).adjust
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.065932902953" y="460.0" width="0.3047941581119695" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*gcControllerState).findRunnableGCWorker
采样数: 24 (0.03%)
耗时: 0.24 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.065932902953" y="430.0" width="0.03809926976399619" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.casgstatus
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.1040321727169" y="430.0" width="0.02539951317599746" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*gcCPULimiterState).update
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.1040321727169" y="400.0" width="0.02539951317599746" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*gcCPULimiterState).updateLocked
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.1040321727169" y="370.0" width="0.01269975658799873" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*gcCPULimiterState).accumulate
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.1294316858928" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint32).CompareAndSwap
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.3707270610648" y="460.0" width="0.08889829611599112" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nanotime
采样数: 7 (0.01%)
耗时: 0.07 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.3707270610648" y="430.0" width="0.08889829611599112" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nanotime1
采样数: 7 (0.01%)
耗时: 0.07 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.4596253571808" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcMarkWorkAvailable
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.4723251137689" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.globrunqget
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.485024870357" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*lfstack).pop
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.497724626945" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.taggedPointer.pointer
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.510424383533" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlockWithRank
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.510424383533" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlock2
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.510424383533" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mLockProfile).recordUnlock
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.5231241401211" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timers).unlock
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.8406180548207" y="490.0" width="0.1650968356439835" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.execute
采样数: 13 (0.01%)
耗时: 0.13 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.8406180548207" y="460.0" width="0.02539951317599746" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>gcWriteBarrier
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.8660175679966" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nanotime
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1203.8660175679966" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nanotime1
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.0057148904646" y="490.0" width="0.03809926976399619" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.runqget
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.0438141602285" y="490.0" width="0.02539951317599746" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*guintptr).cas
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.0692136734044" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.wakep
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.0819134299925" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/atomic.(*Uint32).Load
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.0946131865805" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.traceEnabled
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.1073129431686" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.traceShuttingDown
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.1200126997567" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlockWithRank
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.1200126997567" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unlock2
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.2216107524607" y="520.0" width="0.11429780929198857" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.wakep
采样数: 9 (0.01%)
耗时: 0.09 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.2216107524607" y="490.0" width="0.07619853952799238" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.pidlegetSpinning
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.2216107524607" y="460.0" width="0.06349878293999366" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.pidleget
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.3359085617526" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.releasem
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.3486083183407" y="610.0" width="2.1462588633717856" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.systemstack
采样数: 169 (0.18%)
耗时: 1.69 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.3486083183407" y="580.0" width="1.3969732246798603" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mheap).alloc.func1
采样数: 110 (0.12%)
耗时: 1.10 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.3486083183407" y="550.0" width="1.3969732246798603" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.sysUsedOS
采样数: 110 (0.12%)
耗时: 1.10 s</title>
</rect>
</g>
<g class="frame">
<rect x="1204.3486083183407" y="520.0" width="1.3969732246798603" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.madvise
采样数: 110 (0.12%)
耗时: 1.10 s</title>
</rect>
</g>
<g class="frame">
<rect x="1205.7455815430205" y="580.0" width="0.3428934278759657" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcStart.func4
采样数: 27 (0.03%)
耗时: 0.27 s</title>
</rect>
</g>
<g class="frame">
<rect x="1205.7455815430205" y="550.0" width="0.3428934278759657" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.startTheWorldWithSema
采样数: 27 (0.03%)
耗时: 0.27 s</title>
</rect>
</g>
<g class="frame">
<rect x="1205.7455815430205" y="520.0" width="0.3428934278759657" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.netpoll
采样数: 27 (0.03%)
耗时: 0.27 s</title>
</rect>
</g>
<g class="frame">
<rect x="1205.7455815430205" y="490.0" width="0.3428934278759657" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.kevent
采样数: 27 (0.03%)
耗时: 0.27 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.0884749708964" y="580.0" width="0.3174939146999683" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcMarkTermination.func3
采样数: 25 (0.03%)
耗时: 0.25 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.0884749708964" y="550.0" width="0.3174939146999683" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.startTheWorldWithSema
采样数: 25 (0.03%)
耗时: 0.25 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.0884749708964" y="520.0" width="0.3174939146999683" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.netpoll
采样数: 25 (0.03%)
耗时: 0.25 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.0884749708964" y="490.0" width="0.3174939146999683" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.kevent
采样数: 25 (0.03%)
耗时: 0.25 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.4059688855964" y="580.0" width="0.03809926976399619" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>gosave_systemstack_switch
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.4440681553604" y="580.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.save_g
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.4948671817124" y="610.0" width="1.422372737855858" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime/pprof.profileWriter
采样数: 112 (0.12%)
耗时: 1.12 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.4948671817124" y="580.0" width="0.5587892898719442" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime/pprof.(*profileBuilder).addCPUData
采样数: 44 (0.05%)
耗时: 0.44 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.4948671817124" y="550.0" width="0.3809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime/pprof.(*profMap).lookup
采样数: 30 (0.03%)
耗时: 0.30 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.4948671817124" y="520.0" width="0.10159805270398985" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mapaccess1_fast64
采样数: 8 (0.01%)
耗时: 0.08 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.4948671817124" y="490.0" width="0.05079902635199492" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.memhash64
采样数: 4 (0.00%)
耗时: 0.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="1206.5964652344164" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>internal/runtime/maps.(*groupReference).key
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.0536564715844" y="580.0" width="0.5460895332839454" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime/pprof.readProfile
采样数: 43 (0.05%)
耗时: 0.43 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.0536564715844" y="550.0" width="0.46989099375595306" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*profBuf).read
采样数: 37 (0.04%)
耗时: 0.37 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.5235474653405" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.countSub
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.5362472219285" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*profAtomic).store
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.5997460048684" y="580.0" width="0.24129537517197588" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>time.Sleep
采样数: 19 (0.02%)
耗时: 0.19 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.5997460048684" y="550.0" width="0.07619853952799238" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gopark
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.5997460048684" y="520.0" width="0.06349878293999366" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gopreempt_m
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.5997460048684" y="490.0" width="0.06349878293999366" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goschedImpl
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.5997460048684" y="460.0" width="0.06349878293999366" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.schedule
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.5997460048684" y="430.0" width="0.06349878293999366" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.execute
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.5997460048684" y="400.0" width="0.02539951317599746" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gogo
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.6251455180443" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.casgstatus
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.6251455180443" y="370.0" width="0.01269975658799873" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*timeHistogram).record
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.9172399195681" y="610.0" width="0.7492856386919251" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Pow
采样数: 59 (0.06%)
耗时: 0.59 s</title>
</rect>
</g>
<g class="frame">
<rect x="1207.9172399195681" y="580.0" width="0.22859561858397714" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.pow
采样数: 18 (0.02%)
耗时: 0.18 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.1458355381521" y="580.0" width="0.19049634881998095" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Frexp
采样数: 15 (0.02%)
耗时: 0.15 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.1458355381521" y="550.0" width="0.10159805270398985" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsInf
采样数: 8 (0.01%)
耗时: 0.08 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.2474335908562" y="550.0" width="0.03809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.frexp
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.2855328606202" y="550.0" width="0.03809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.normalize
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.323632130384" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Float64frombits
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.3363318869722" y="580.0" width="0.11429780929198857" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Modf
采样数: 9 (0.01%)
耗时: 0.09 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.3363318869722" y="550.0" width="0.03809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.archModf
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.450629696264" y="580.0" width="0.08889829611599112" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsInf
采样数: 7 (0.01%)
耗时: 0.07 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.53952799238" y="580.0" width="0.08889829611599112" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Ldexp
采样数: 7 (0.01%)
耗时: 0.07 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.53952799238" y="550.0" width="0.03809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Float64frombits
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.577627262144" y="550.0" width="0.02539951317599746" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.ldexp
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.60302677532" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsNaN
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.615726531908" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsInf
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.628426288496" y="580.0" width="0.02539951317599746" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsNaN
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.66652555826" y="610.0" width="0.330193671287967" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcBgMarkWorker
采样数: 26 (0.03%)
耗时: 0.26 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.66652555826" y="580.0" width="0.2031961054079797" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.systemstack
采样数: 16 (0.02%)
耗时: 0.16 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.66652555826" y="550.0" width="0.1650968356439835" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcDrainMarkWorkerFractional
采样数: 13 (0.01%)
耗时: 0.13 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.66652555826" y="520.0" width="0.1650968356439835" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcDrain
采样数: 13 (0.01%)
耗时: 0.13 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.66652555826" y="490.0" width="0.11429780929198857" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.markroot
采样数: 9 (0.01%)
耗时: 0.09 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.66652555826" y="460.0" width="0.05079902635199492" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.markrootBlock
采样数: 4 (0.00%)
耗时: 0.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.66652555826" y="430.0" width="0.03809926976399619" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.scanblock
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.66652555826" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.findObject
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.717324584612" y="460.0" width="0.03809926976399619" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.markrootSpans
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.7808233675519" y="490.0" width="0.05079902635199492" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.scanobject
采样数: 4 (0.00%)
耗时: 0.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.7808233675519" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mspan).typePointersOfUnchecked
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.7808233675519" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mspan).heapBitsSmallForAddr
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.79352312414" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.greyobject
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.831622393904" y="550.0" width="0.03809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gcBgMarkWorker.func2
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.8697216636679" y="580.0" width="0.11429780929198857" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gopark
采样数: 9 (0.01%)
耗时: 0.09 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.8697216636679" y="550.0" width="0.07619853952799238" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gopreempt_m
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.8697216636679" y="520.0" width="0.07619853952799238" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goschedImpl
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.8697216636679" y="490.0" width="0.07619853952799238" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.schedule
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.8697216636679" y="460.0" width="0.07619853952799238" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.execute
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1208.996719229548" y="610.0" width="0.15239707905598476" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.acquirem
采样数: 12 (0.01%)
耗时: 0.12 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.149116308604" y="610.0" width="0.13969732246798605" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Cos
采样数: 11 (0.01%)
耗时: 0.11 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.149116308604" y="580.0" width="0.13969732246798605" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.cos
采样数: 11 (0.01%)
耗时: 0.11 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.2888136310721" y="610.0" width="0.1269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nanotime
采样数: 10 (0.01%)
耗时: 0.10 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.2888136310721" y="580.0" width="0.1269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nanotime1
采样数: 10 (0.01%)
耗时: 0.10 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.415811196952" y="610.0" width="0.11429780929198857" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>main.main.func2
采样数: 9 (0.01%)
耗时: 0.09 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.530109006244" y="610.0" width="0.11429780929198857" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.bgscavenge
采样数: 9 (0.01%)
耗时: 0.09 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.530109006244" y="580.0" width="0.08889829611599112" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*scavengerState).run
采样数: 7 (0.01%)
耗时: 0.07 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.530109006244" y="550.0" width="0.05079902635199492" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*scavengerState).init.func3
采样数: 4 (0.00%)
耗时: 0.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.580908032596" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*sysMemStat).load
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.61900730236" y="580.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*scavengerState).park
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.6444068155358" y="610.0" width="0.08889829611599112" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.Sin
采样数: 7 (0.01%)
耗时: 0.07 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.6444068155358" y="580.0" width="0.06349878293999366" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.sin
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.707905598476" y="580.0" width="0.02539951317599746" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>math.IsInf
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7333051116518" y="610.0" width="0.07619853952799238" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>main.multiplyMatrices
采样数: 6 (0.01%)
耗时: 0.06 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7333051116518" y="580.0" width="0.03809926976399619" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.makeslice
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7333051116518" y="550.0" width="0.03809926976399619" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mallocgc
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7333051116518" y="520.0" width="0.03809926976399619" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mallocgcSmallNoscan
采样数: 3 (0.00%)
耗时: 0.03 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7333051116518" y="490.0" width="0.02539951317599746" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.memclrNoHeapPointers
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7587046248277" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcache).nextFree
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7587046248277" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcache).refill
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7587046248277" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*mcentral).cacheSpan
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7587046248277" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.deductSweepCredit
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7587046248277" y="370.0" width="0.01269975658799873" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.sweepone
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7587046248277" y="340.0" width="0.01269975658799873" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*sweepLocked).sweep
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7587046248277" y="310.0" width="0.01269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*spanSet).push
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.7587046248277" y="280.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.(*lfstack).pop
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.8095036511797" y="610.0" width="0.06349878293999366" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>gogo
采样数: 5 (0.01%)
耗时: 0.05 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.8095036511797" y="580.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.save_g
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.8730024341198" y="610.0" width="0.05079902635199492" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.mcall
采样数: 4 (0.00%)
耗时: 0.04 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.8730024341198" y="580.0" width="0.02539951317599746" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gosched_m
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.8730024341198" y="550.0" width="0.02539951317599746" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goschedImpl
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.8730024341198" y="520.0" width="0.02539951317599746" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.schedule
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.8730024341198" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.execute
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.885702190708" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.findRunnable
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.885702190708" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nanotime
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.885702190708" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.nanotime1
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.8984019472957" y="580.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.park_m
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.8984019472957" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.casgstatus
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9111017038838" y="580.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gopreempt_m
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9111017038838" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goschedImpl
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9111017038838" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.wakep
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9238014604719" y="610.0" width="0.02539951317599746" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>google.golang.org/grpc/internal/transport.newHTTP2Client.func6
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9238014604719" y="580.0" width="0.02539951317599746" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>google.golang.org/grpc/internal/transport.(*loopyWriter).run
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9238014604719" y="550.0" width="0.02539951317599746" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>google.golang.org/grpc/internal/transport.(*bufWriter).Flush
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9238014604719" y="520.0" width="0.02539951317599746" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>net.(*conn).Write
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9238014604719" y="490.0" width="0.02539951317599746" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>net.(*netFD).Write
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9238014604719" y="460.0" width="0.02539951317599746" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>syscall.Write
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9238014604719" y="430.0" width="0.02539951317599746" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>syscall.write
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9238014604719" y="400.0" width="0.02539951317599746" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>syscall.syscall
采样数: 2 (0.00%)
耗时: 0.02 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9492009736477" y="610.0" width="0.01269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.puintptr.ptr
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9619007302358" y="610.0" width="0.01269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.unique_runtime_registerUniqueMapCleanup.func2
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9619007302358" y="580.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>unique.registerCleanup.func1
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9746004868239" y="610.0" width="0.01269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.goparkunlock
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.9746004868239" y="580.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>runtime.gopark
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.987300243412" y="610.0" width="0.01269975658799873" height="29.0" fill="url(#grad2)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>google.golang.org/grpc/internal/transport.(*http2Client).reader
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.987300243412" y="580.0" width="0.01269975658799873" height="29.0" fill="url(#grad3)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>golang.org/x/net/http2.(*Framer).ReadFrame
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.987300243412" y="550.0" width="0.01269975658799873" height="29.0" fill="url(#grad4)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>io.ReadFull
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.987300243412" y="520.0" width="0.01269975658799873" height="29.0" fill="url(#grad5)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>io.ReadAtLeast
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.987300243412" y="490.0" width="0.01269975658799873" height="29.0" fill="url(#grad6)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>bufio.(*Reader).Read
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.987300243412" y="460.0" width="0.01269975658799873" height="29.0" fill="url(#grad7)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>net.(*conn).Read
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.987300243412" y="430.0" width="0.01269975658799873" height="29.0" fill="url(#grad8)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>net.(*netFD).Read
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.987300243412" y="400.0" width="0.01269975658799873" height="29.0" fill="url(#grad9)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>syscall.Read
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.987300243412" y="370.0" width="0.01269975658799873" height="29.0" fill="url(#grad10)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>syscall.read
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
<g class="frame">
<rect x="1209.987300243412" y="340.0" width="0.01269975658799873" height="29.0" fill="url(#grad1)" stroke="rgba(150,50,50,0.3)" stroke-width="0.5" rx="2" ry="2" >
<title>syscall.syscall
采样数: 1 (0.00%)
耗时: 0.01 s</title>
</rect>
</g>
</svg>
